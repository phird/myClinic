import{createFactory as t,$eq as i,$ne as e,$lt as s,$lte as n,$gt as r,$gte as o,$in as c,$nin as u,$all as h,$size as l,$regex as a,$options as f,$elemMatch as d,$exists as b,eq as y,ne as p,lt as w,lte as g,gt as $,gte as A,within as M,nin as j,all as m,size as E,regex as v,elemMatch as x,exists as O,and as _}from"@ucast/mongo2js";function F(t){return Array.isArray(t)?t:[t]}const C=Object.hasOwn||Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);const R="__caslSubjectType__";function P(t,i){if(i)if(!C(i,R))Object.defineProperty(i,R,{value:t});else if(t!==i[R])throw new Error(`Trying to cast object to subject type ${t} but previously it was casted to ${i[R]}`);return i}const T=t=>{const i=typeof t;return"string"===i||"function"===i};const B=t=>t.modelName||t.name;const S=t=>"string"===typeof t?t:B(t);function q(t){if(C(t,R))return t[R];return B(t.constructor)}function z(t,i,e){let s=F(i);let n=0;while(n<s.length){const i=s[n++];if(C(t,i))s=e(s,t[i])}return s}function D(t,i){if("string"===typeof i&&-1!==t.indexOf(i))return i;for(let e=0;e<i.length;e++)if(-1!==t.indexOf(i[e]))return i[e];return null}const Y=(t,i)=>t.concat(i);function k(t,i){if(i in t)throw new Error(`Cannot use "${i}" as an alias because it's reserved action.`);const e=Object.keys(t);const s=(t,e)=>{const s=D(t,e);if(s)throw new Error(`Detected cycle ${s} -> ${t.join(", ")}`);const n="string"===typeof e&&e===i||-1!==t.indexOf(i)||Array.isArray(e)&&-1!==e.indexOf(i);if(n)throw new Error(`Cannot make an alias to "${i}" because this is reserved action`);return t.concat(e)};for(let i=0;i<e.length;i++)z(t,e[i],s)}function I(t,i){if(!i||false!==i.skipValidate)k(t,i&&i.anyAction||"manage");return i=>z(t,i,Y)}function L(t,i,e){for(let s=e;s<i.length;s++)t.push(i[s])}function U(t,i){if(!t||!t.length)return i||[];if(!i||!i.length)return t||[];let e=0;let s=0;const n=[];while(e<t.length&&s<i.length)if(t[e].priority<i[s].priority){n.push(t[e]);e++}else{n.push(i[s]);s++}L(n,t,e);L(n,i,s);return n}function G(t,i,e){let s=t.get(i);if(!s){s=e();t.set(i,s)}return s}const H=t=>t;function J(t,i){if(Array.isArray(t.fields)&&!t.fields.length)throw new Error("`rawRule.fields` cannot be an empty array. https://bit.ly/390miLa");if(t.fields&&!i.fieldMatcher)throw new Error('You need to pass "fieldMatcher" option in order to restrict access by fields');if(t.conditions&&!i.conditionsMatcher)throw new Error('You need to pass "conditionsMatcher" option in order to restrict access by conditions')}class K{constructor(t,i,e=0){J(t,i);this.action=i.resolveAction(t.action);this.subject=t.subject;this.inverted=!!t.inverted;this.conditions=t.conditions;this.reason=t.reason;this.fields=t.fields?F(t.fields):void 0;this.priority=e;this.t=i}i(){if(this.conditions&&!this.o)this.o=this.t.conditionsMatcher(this.conditions);return this.o}get ast(){const t=this.i();return t?t.ast:void 0}matchesConditions(t){if(!this.conditions)return true;if(!t||T(t))return!this.inverted;const i=this.i();return i(t)}matchesField(t){if(!this.fields)return true;if(!t)return!this.inverted;if(this.fields&&!this.u)this.u=this.t.fieldMatcher(this.fields);return this.u(t)}}function N(t,i){const e={value:t,prev:i,next:null};if(i)i.next=e;return e}function Q(t){if(t.next)t.next.prev=t.prev;if(t.prev)t.prev.next=t.next;t.next=t.prev=null}const V=t=>({value:t.value,prev:t.prev,next:t.next});const W=()=>({rules:[],merged:false});const X=()=>new Map;const Z=(t,i)=>{if(!t.h&&i.fields)t.h=true};class tt{constructor(t=[],i={}){this.h=false;this.l=new Map;this.p={conditionsMatcher:i.conditionsMatcher,fieldMatcher:i.fieldMatcher,resolveAction:i.resolveAction||H};this.g=i.anyAction||"manage";this.$=i.anySubjectType||"all";this.A=i.detectSubjectType||q;this.M=t;this.j=this.m(t)}get rules(){return this.M}detectSubjectType(t){if(T(t))return t;if(!t)return this.$;return this.A(t)}update(t){const i={rules:t,ability:this,target:this};this.v("update",i);this.M=t;this.j=this.m(t);this.v("updated",i);return this}m(t){const i=new Map;for(let e=t.length-1;e>=0;e--){const s=t.length-e-1;const n=new K(t[e],this.p,s);const r=F(n.action);const o=F(n.subject||this.$);Z(this,n);for(let t=0;t<o.length;t++){const e=G(i,o[t],X);for(let t=0;t<r.length;t++)G(e,r[t],W).rules.push(n)}}return i}possibleRulesFor(t,i=this.$){if(!T(i))throw new Error('"possibleRulesFor" accepts only subject types (i.e., string or class) as the 2nd parameter');const e=G(this.j,i,X);const s=G(e,t,W);if(s.merged)return s.rules;const n=t!==this.g&&e.has(this.g)?e.get(this.g).rules:void 0;let r=U(s.rules,n);if(i!==this.$)r=U(r,this.possibleRulesFor(t,this.$));s.rules=r;s.merged=true;return r}rulesFor(t,i,e){const s=this.possibleRulesFor(t,i);if(e&&"string"!==typeof e)throw new Error("The 3rd, `field` parameter is expected to be a string. See https://stalniy.github.io/casl/en/api/casl-ability#can-of-pure-ability for details");if(!this.h)return s;return s.filter((t=>t.matchesField(e)))}on(t,i){const e=this.l.get(t)||null;const s=N(i,e);this.l.set(t,s);return()=>{const i=this.l.get(t);if(!s.next&&!s.prev&&i===s)this.l.delete(t);else if(s===i)this.l.set(t,s.prev);Q(s)}}v(t,i){let e=this.l.get(t)||null;while(null!==e){const t=e.prev?V(e.prev):null;e.value(i);e=t}}}class PureAbility extends tt{can(t,i,e){const s=this.relevantRuleFor(t,i,e);return!!s&&!s.inverted}relevantRuleFor(t,i,e){const s=this.detectSubjectType(i);const n=this.rulesFor(t,s,e);for(let t=0,e=n.length;t<e;t++)if(n[t].matchesConditions(i))return n[t];return null}cannot(t,i,e){return!this.can(t,i,e)}}const it={$eq:i,$ne:e,$lt:s,$lte:n,$gt:r,$gte:o,$in:c,$nin:u,$all:h,$size:l,$regex:a,$options:f,$elemMatch:d,$exists:b};const et={eq:y,ne:p,lt:w,lte:g,gt:$,gte:A,in:M,nin:j,all:m,size:E,regex:v,elemMatch:x,exists:O,and:_};const st=(i,e,s)=>t(Object.assign({},it,i),Object.assign({},et,e),s);const nt=t(it,et);const rt=/[-/\\^$+?.()|[\]{}]/g;const ot=/\.?\*+\.?/g;const ct=/\*+/;const ut=/\./g;function ht(t,i,e){const s="*"===e[0]||"."===t[0]&&"."===t[t.length-1]?"+":"*";const n=-1===t.indexOf("**")?"[^.]":".";const r=t.replace(ut,"\\$&").replace(ct,n+s);return i+t.length===e.length?`(?:${r})?`:r}function lt(t,i,e){if("."===t&&("*"===e[i-1]||"*"===e[i+1]))return t;return`\\${t}`}function at(t){const i=t.map((t=>t.replace(rt,lt).replace(ot,ht)));const e=i.length>1?`(?:${i.join("|")})`:i[0];return new RegExp(`^${e}$`)}const ft=t=>{let i;return e=>{if("undefined"===typeof i)i=t.every((t=>-1===t.indexOf("*")))?null:at(t);return null===i?-1!==t.indexOf(e):i.test(e)}};class Ability extends PureAbility{constructor(t=[],i={}){super(t,Object.assign({conditionsMatcher:nt,fieldMatcher:ft},i))}}function createMongoAbility(t=[],i={}){return new PureAbility(t,Object.assign({conditionsMatcher:nt,fieldMatcher:ft},i))}function isAbilityClass(t){return"function"===typeof t.prototype.possibleRulesFor}class dt{constructor(t){this.O=t}because(t){this.O.reason=t;return this}}class AbilityBuilder{constructor(t){this.rules=[];this._=t;this.can=this.can.bind(this);this.cannot=this.cannot.bind(this);this.build=this.build.bind(this)}can(t,i,e,s){const n={action:t};if(i){n.subject=i;if(Array.isArray(e)||"string"===typeof e)n.fields=e;else if("undefined"!==typeof e)n.conditions=e;if("undefined"!==typeof s)n.conditions=s}this.rules.push(n);return new dt(n)}cannot(t,i,e,s){const n=this.can(t,i,e,s);n.O.inverted=true;return n}build(t){return isAbilityClass(this._)?new this._(this.rules,t):this._(this.rules,t)}}function defineAbility(t,i){const e=new AbilityBuilder(createMongoAbility);const s=t(e.can,e.cannot);if(s&&"function"===typeof s.then)return s.then((()=>e.build(i)));return e.build(i)}const bt=t=>`Cannot execute "${t.action}" on "${t.subjectType}"`;const yt=function t(i){this.message=i};yt.prototype=Object.create(Error.prototype);class ForbiddenError extends yt{static setDefaultMessage(t){this.F="string"===typeof t?()=>t:t}static from(t){return new this(t)}constructor(t){super("");this.ability=t;if("function"===typeof Error.captureStackTrace){this.name="ForbiddenError";Error.captureStackTrace(this,this.constructor)}}setMessage(t){this.message=t;return this}throwUnlessCan(t,i,e){const s=this.unlessCan(t,i,e);if(s)throw s}unlessCan(t,i,e){const s=this.ability.relevantRuleFor(t,i,e);if(s&&!s.inverted)return;this.action=t;this.subject=i;this.subjectType=S(this.ability.detectSubjectType(i));this.field=e;const n=s?s.reason:"";this.message=this.message||n||this.constructor.F(this);return this}}ForbiddenError.F=bt;var pt=Object.freeze({__proto__:null});export{Ability,AbilityBuilder,ForbiddenError,PureAbility,st as buildMongoQueryMatcher,I as createAliasResolver,createMongoAbility,defineAbility,q as detectSubjectType,ft as fieldPatternMatcher,bt as getDefaultErrorMessage,pt as hkt,nt as mongoQueryMatcher,P as subject,F as wrapArray};
//# sourceMappingURL=index.mjs.map

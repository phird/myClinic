import React, { FunctionComponent } from 'react';
import Shepherd from 'shepherd.js';
import Step from 'shepherd.js/src/types/step';
import Tour from 'shepherd.js/src/types/tour';
declare type StepType = 'back' | 'cancel' | 'next';
export interface ShepherdButtonWithType extends Step.StepOptionsButton {
    type?: StepType;
}
export interface ShepherdOptionsWithType extends Step.StepOptions {
    buttons?: ReadonlyArray<Step.StepOptionsButton | ShepherdButtonWithType>;
}
interface ShepherdProps {
    steps: Array<ShepherdOptionsWithType>;
    tourOptions: Tour.TourOptions;
    children?: React.ReactNode;
}
declare const ShepherdTourContext: React.Context<Shepherd.Tour | null>;
declare const ShepherdTourContextConsumer: React.Consumer<Shepherd.Tour | null>;
export declare const ShepherdTour: FunctionComponent<ShepherdProps>;
export type { default as Step } from 'shepherd.js/src/types/step';
export type { default as Tour } from 'shepherd.js/src/types/tour';
export { ShepherdTourContextConsumer as TourMethods, ShepherdTourContext };
